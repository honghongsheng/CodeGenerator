/**
  File:
  Note : This file is generated by codegenerator.
  Author: JanyHong
  Version: v1.0.0
*/
#ifndef db_interface_format_client_H_
#define db_interface_format_client_H_
#include "json/json.h"
#include "struct_comment_h.h"
#include "server_comment_h.h"

namespace db_agent_api
{

class  dbInterface_client {
public:
    dbInterface_client();
    void init();

    /*
     *param[in]  req
     *param[out] resq
     */
    void say_hello(const std::string& req, std::string& resq, );
    
    /*
     *param[in]  strTag
     *param[in]  strTraceId
     *param[in]  strAgentId
     *param[in]  strMerchantCreateTime
     *param[in]  nPreferentialType
     *param[out] agentComm
     */
    void get_agent_commission(const std::string& strTag, const std::string& strTraceId, const std::string& strAgentId, const std::string& strMerchantCreateTime, const std::string& nPreferentialType, db_agent_api::MerchantCommission& agentComm, );
    
private:
    boost::shared_ptr<boom::protocol> m_ptrProtocal;
    boost::shared_ptr<boom::netengine> m_ptrNetEngine;
};

}//db_agent_api

#endif //db_interface_format_client_H_
