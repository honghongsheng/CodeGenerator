Namespace = db_agent_api
#ServiceName = BaseStructs
#ExportMacro = YK_EXPORT

Includes = (
    json/json.h,
)

CppIncludes = (
    db_interface_format_struct.h
)

strDbOperationGetMerchant(#s) : "get_merchant_by_id";

#test
struct Test : {
    nAge:#i, json="age_real";  //年龄
    strName:#s;  //名称
    dMoney:#d;  //金额
}(json)

#账号
struct MerchantCommission : {
    bValid:#i, json="vaild";  //是否有效
    strAgentId:#s, json="agent_id",iskey=1;  //
    strStartDate:#s, json="start_date";  //
    strUpdateTime:#s, json="update_time";  //
    nPreferentialType:#i, json="preferential_type";  //
    nT1DebitCardCommission:#S, json="t1_debit_commission_bymillion";  //
    nT1DebitCardMaxFee:#S, json="t1_debit_max_fee_bymillion";  //
    nT1CreditCardCommission:#S, json="t1_credit_commission_bymillion";  //
    nT1OverseasCardCommission:#S, json="t1_overseas_commission_bymillion";  //
    nT0DebitCardCommission:#S, json="t0_debit_commission_bymillion";  //
    nT0CreditCardCommission:#S, json="t0_overseas_commission_bymillion";  //
    nT0OverseasCardCommission:#S, json="";  //
    nT0CommissionFixed:#S, json="";  //
}(json,table=t_merchant_comminsion)


service dbInterface  {
    say_hello(req:#s) => (resq:#s)
    get_agent_commission(strTag:#s,strTraceId:#s,strAgentId:#s,strMerchantCreateTime:#s,nPreferentialType:#s) => (agentComm:#MerchantCommission)
}()