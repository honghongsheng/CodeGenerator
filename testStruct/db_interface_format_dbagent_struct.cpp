/**
  File:
  Note : This file is generated by codegenerator.
  Author: JanyHong
  Version: v1.0.0
*/
#include "db_interface_format_dbagent_struct.h"
namespace db_agent_api
{
//////////////////////////////
///Test
////////////////////////////////
Test::Test()
    : nAge(utils::defaultValue<int>())
    , dMoney(utils::defaultValue<double>())
{}

Test::Test(const Test& right)
    : nAge(right.nAge)
    , strName(right.strName)
    , dMoney(right.dMoney)
{}

Test& Test::operator=(const Test& right)
{
    nAge = right.nAge;
    strName = right.strName;
    dMoney = right.dMoney;
    return *this;
}

void Test::fromJson(Json::Value &jsonObj) {
    utils::getJsonValue(jsonObj, "age_real", nAge);
    utils::getJsonValue(jsonObj, "strName", strName);
    utils::getJsonValue(jsonObj, "dMoney", dMoney);
}

void Test::toJson(Json::Value &jsonObj) const {
    utils::addJsonValue(jsonObj, "age_real", nAge);
    utils::addJsonValue(jsonObj, "strName", strName);
    utils::addJsonValue(jsonObj, "dMoney", dMoney);
}

//////////////////////////////
///MerchantCommission
////////////////////////////////
MerchantCommission::MerchantCommission()
    : bValid(utils::defaultValue<int>())
    , nPreferentialType(utils::defaultValue<int>())
{}

MerchantCommission::MerchantCommission(const MerchantCommission& right)
    : bValid(right.bValid)
    , strAgentId(right.strAgentId)
    , strStartDate(right.strStartDate)
    , strUpdateTime(right.strUpdateTime)
    , nPreferentialType(right.nPreferentialType)
    , nT1DebitCardCommission(right.nT1DebitCardCommission)
    , nT1DebitCardMaxFee(right.nT1DebitCardMaxFee)
    , nT1CreditCardCommission(right.nT1CreditCardCommission)
    , nT1OverseasCardCommission(right.nT1OverseasCardCommission)
    , nT0DebitCardCommission(right.nT0DebitCardCommission)
    , nT0CreditCardCommission(right.nT0CreditCardCommission)
    , nT0OverseasCardCommission(right.nT0OverseasCardCommission)
    , nT0CommissionFixed(right.nT0CommissionFixed)
{}

MerchantCommission& MerchantCommission::operator=(const MerchantCommission& right)
{
    bValid = right.bValid;
    strAgentId = right.strAgentId;
    strStartDate = right.strStartDate;
    strUpdateTime = right.strUpdateTime;
    nPreferentialType = right.nPreferentialType;
    nT1DebitCardCommission = right.nT1DebitCardCommission;
    nT1DebitCardMaxFee = right.nT1DebitCardMaxFee;
    nT1CreditCardCommission = right.nT1CreditCardCommission;
    nT1OverseasCardCommission = right.nT1OverseasCardCommission;
    nT0DebitCardCommission = right.nT0DebitCardCommission;
    nT0CreditCardCommission = right.nT0CreditCardCommission;
    nT0OverseasCardCommission = right.nT0OverseasCardCommission;
    nT0CommissionFixed = right.nT0CommissionFixed;
    return *this;
}

void MerchantCommission::fromJson(Json::Value &jsonObj) {
    utils::getJsonValue(jsonObj, "vaild", bValid);
    utils::getJsonValue(jsonObj, "agent_id", strAgentId);
    utils::getJsonValue(jsonObj, "start_date", strStartDate);
    utils::getJsonValue(jsonObj, "update_time", strUpdateTime);
    utils::getJsonValue(jsonObj, "preferential_type", nPreferentialType);
    utils::getJsonValue(jsonObj, "t1_debit_commission_bymillion", nT1DebitCardCommission);
    utils::getJsonValue(jsonObj, "t1_debit_max_fee_bymillion", nT1DebitCardMaxFee);
    utils::getJsonValue(jsonObj, "t1_credit_commission_bymillion", nT1CreditCardCommission);
    utils::getJsonValue(jsonObj, "t1_overseas_commission_bymillion", nT1OverseasCardCommission);
    utils::getJsonValue(jsonObj, "t0_debit_commission_bymillion", nT0DebitCardCommission);
    utils::getJsonValue(jsonObj, "t0_overseas_commission_bymillion", nT0CreditCardCommission);
    utils::getJsonValue(jsonObj, "nT0OverseasCardCommission", nT0OverseasCardCommission);
    utils::getJsonValue(jsonObj, "nT0CommissionFixed", nT0CommissionFixed);
}

void MerchantCommission::toJson(Json::Value &jsonObj) const {
    utils::addJsonValue(jsonObj, "vaild", bValid);
    utils::addJsonValue(jsonObj, "agent_id", strAgentId);
    utils::addJsonValue(jsonObj, "start_date", strStartDate);
    utils::addJsonValue(jsonObj, "update_time", strUpdateTime);
    utils::addJsonValue(jsonObj, "preferential_type", nPreferentialType);
    utils::addJsonValue(jsonObj, "t1_debit_commission_bymillion", nT1DebitCardCommission);
    utils::addJsonValue(jsonObj, "t1_debit_max_fee_bymillion", nT1DebitCardMaxFee);
    utils::addJsonValue(jsonObj, "t1_credit_commission_bymillion", nT1CreditCardCommission);
    utils::addJsonValue(jsonObj, "t1_overseas_commission_bymillion", nT1OverseasCardCommission);
    utils::addJsonValue(jsonObj, "t0_debit_commission_bymillion", nT0DebitCardCommission);
    utils::addJsonValue(jsonObj, "t0_overseas_commission_bymillion", nT0CreditCardCommission);
    utils::addJsonValue(jsonObj, "nT0OverseasCardCommission", nT0OverseasCardCommission);
    utils::addJsonValue(jsonObj, "nT0CommissionFixed", nT0CommissionFixed);
}
}//db_agent_api
